public class Merge_sort {
    public static void main(String[] args) {
        int arr[] ={2,5,1,3,4};
        solve(arr,5);
        for(int i=0;i<arr.length;i++){
            System.out.println(arr[i]);
        }
    }


 

    public static long solve(int[] A,int n){
            long count=0;
            count = merge_sort(A,0,n-1);
            return count;
        }


        public static long merge_sort(int arr[] , int left , int right){
            if(left<right){
                int mid = (left+right)/2;
                long count_left = merge_sort(arr,left,mid);
                long right_count  = merge_sort(arr,mid+1,right);
                long final_count = merge(arr , left , mid+1 , right);

                return count_left+ right_count+ final_count;
            }
            return 0;
        }


        public static long merge(int arr[] , int left, int mid , int right){
            int i = left,j=mid,k=0;
            long count=0;
            int temp [] = new int[right-left+1];
            while(i<mid && j<=right){

                if(arr[i]<=arr[j]){
                    temp[k++]=arr[i++];
                }
                else{
                    temp[k++] = arr[j++];
                    count += mid-i ;
                }

            }

            while(i<mid){
                temp[k++]=arr[i++];
            }

            while(j<=right){
                temp[k++]=arr[j++];
            }
            k=0;
            for(int q=left;q<=right;q++){
                arr[q]=temp[k++];
            }

            return count;
        }



    }

 

